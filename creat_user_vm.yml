- name: Create LXC containers for users in group
  hosts: "*"
  vars:
    os_type: alpine
  tasks:
    - name: List existing groups
      community.general.proxmox_group_info:
        api_user: "{{ var_ansible_user }}"
        api_host: "{{ var_ansible_host }}"
        api_token_id: "{{ var_ansible_token_id }}"
        api_token_secret: "{{ var_ansible_token }}"
        group: "{{ var_group_name }}"
      register: proxmox_groups

    - name: Set fact with users list
      set_fact:
        proxmox_groups_users: "{{ proxmox_groups.proxmox_groups | map(attribute='users') | flatten }}"

    - name: Set fact with VM names
      set_fact:
        proxmox_vm_names: "{{ proxmox_vm_names | default([]) + [{'username': item.split('@')[0], 'vm_name': item.split('@')[0] + '-' + os_type}] }}"
      with_items: "{{ proxmox_groups_users }}"

    - name: Create LXC container for each user in group
      community.general.proxmox:
        api_user: "{{ var_ansible_user }}"
        api_host: "{{ var_ansible_host }}"
        api_token_id: "{{ var_ansible_token_id }}"
        api_token_secret: "{{ var_ansible_token }}"
        node: pve-01
        hostname: "{{ item.vm_name }}"
        ostemplate: 'local:vztmpl/alpine-3.19-default_20240207_amd64.tar.xz'
        cores: 1
        memory: 1024
        netif: '{"net0":"name=eth0,ip=dhcp,ip6=dhcp,bridge=vmbr0"}'
        disk: 'DATA:10'
        ostype: "{{ os_type }}"
        pool: "{{ var_group_name }}"
        password: '123456'
        state: present
      with_items: "{{ proxmox_vm_names }}"

    - name: Get VM ID for each VM
      community.general.proxmox_vm_info:
        api_user: "{{ var_ansible_user }}"
        api_host: "{{ var_ansible_host }}"
        api_token_id: "{{ var_ansible_token_id }}"
        api_token_secret: "{{ var_ansible_token }}"
        name: "{{ item.vm_name }}"
      register: proxmox_vm_info
      with_items: "{{ proxmox_vm_names }}"

    - name: Grant VM access to each user
      community.general.proxmox:
        api_user: "{{ var_ansible_user }}"
        api_host: "{{ var_ansible_host }}"
        api_token_id: "{{ var_ansible_token_id }}"
        api_token_secret: "{{ var_ansible_token }}"
        vmid: "{{ item.vmid }}"
        user: "{{ item.username }}"
        role: "PVEVMUserRole"
        privileges: "All"
        state: present
      with_items: "{{ proxmox_vm_info.results }}"
